import zipfile
import os

# Crear estructura de carpetas y archivos del proyecto
project_name = "jhay-wheeler-gift"
base_path = f"/mnt/data/{project_name}"
os.makedirs(f"{base_path}/images", exist_ok=True)
os.makedirs(f"{base_path}/audio", exist_ok=True)

# Contenido de los archivos
index_html = """
<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Para Ti 💖</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <audio autoplay loop>
    <source src="audio/fondo.mp3" type="audio/mp3">
  </audio>

  <canvas id="heart-canvas"></canvas>

  <div class="container">
    <h1>🎁 Para Ti 💖</h1>
    <p>Una lista especial con canciones de Jhay Wheeler que me recuerdan a ti 🥺</p>

    <div class="song-grid">
      <div class="card">
        <img src="images/curiosidad.jpg" alt="La Curiosidad">
        <h2>La Curiosidad</h2>
        <a href="https://open.spotify.com/track/5nujrmhLynf4yMoMtj8AQF" target="_blank">Escuchar en Spotify</a>
      </div>

      <div class="card">
        <img src="images/matamos.jpg" alt="Nos Matamos">
        <h2>Nos Matamos</h2>
        <a href="https://open.spotify.com/track/4ZaSYjcgME4PR6qrWj7t1d" target="_blank">Escuchar en Spotify</a>
      </div>

      <div class="card">
        <img src="images/techo.jpg" alt="Viendo el Techo">
        <h2>Viendo el Techo</h2>
        <a href="https://open.spotify.com/track/0gltMKAqZUvN1FWhdAOCE1" target="_blank">Escuchar en Spotify</a>
      </div>
    </div>

    <div class="final-message">
      <h2>💌 Gracias por existir 💌</h2>
      <p>Espero que te haya gustado este detalle. Si quieres hablar conmigo, haz clic abajo ❤️</p>
      <a class="whatsapp-button" href="https://wa.me/573001234567" target="_blank">💬 Mandarme un mensajito</a>
    </div>
  </div>

  <script src="hearts.js"></script>
</body>
</html>
"""

style_css = """
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Segoe UI', sans-serif;
  background: linear-gradient(135deg, #f3a683, #f19066, #f7d794);
  color: #fff;
  overflow: hidden;
  position: relative;
}

audio {
  display: none;
}

#heart-canvas {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
}

.container {
  position: relative;
  z-index: 1;
  text-align: center;
  padding: 2rem;
}

h1 {
  font-size: 3rem;
  animation: slideIn 1.5s ease-in-out;
  color: #fff;
}

p {
  font-size: 1.2rem;
  margin-bottom: 2rem;
}

.song-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 2rem;
  padding: 1rem;
}

.card {
  background-color: rgba(255, 255, 255, 0.1);
  border-radius: 15px;
  padding: 1rem;
  box-shadow: 0 4px 15px rgba(0,0,0,0.2);
  transition: transform 0.3s;
  animation: popIn 1.2s ease forwards;
}

.card:hover {
  transform: scale(1.05);
}

.card img {
  width: 100%;
  border-radius: 10px;
}

.card h2 {
  margin-top: 0.8rem;
  font-size: 1.3rem;
}

.card a {
  display: inline-block;
  margin-top: 0.5rem;
  padding: 0.6rem 1.2rem;
  background-color: #1db954;
  color: white;
  text-decoration: none;
  border-radius: 20px;
  transition: background-color 0.3s;
}

.card a:hover {
  background-color: #17a44b;
}

.final-message {
  margin-top: 4rem;
  animation: fadeIn 2s ease-in;
}

.whatsapp-button {
  display: inline-block;
  margin-top: 1rem;
  background-color: #25d366;
  color: white;
  padding: 0.8rem 1.5rem;
  border-radius: 30px;
  text-decoration: none;
  font-weight: bold;
  transition: background-color 0.3s;
}

.whatsapp-button:hover {
  background-color: #1ebe5d;
}

@keyframes slideIn {
  from { transform: translateY(-30px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes popIn {
  0% { transform: scale(0.8); opacity: 0; }
  100% { transform: scale(1); opacity: 1; }
}
"""

hearts_js = """
const canvas = document.getElementById('heart-canvas');
const ctx = canvas.getContext('2d');

canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

let hearts = [];

function Heart(x, y) {
  this.x = x;
  this.y = y;
  this.size = Math.random() * 20 + 10;
  this.speed = Math.random() * 1 + 0.5;
  this.opacity = Math.random() * 0.5 + 0.3;
  this.color = `rgba(255, 0, 100, ${this.opacity})`;
}

Heart.prototype.draw = function() {
  ctx.fillStyle = this.color;
  ctx.beginPath();
  ctx.moveTo(this.x, this.y);
  ctx.bezierCurveTo(this.x + this.size / 2, this.y - this.size,
                    this.x + this.size * 1.5, this.y + this.size / 3,
                    this.x, this.y + this.size);
  ctx.bezierCurveTo(this.x - this.size * 1.5, this.y + this.size / 3,
                    this.x - this.size / 2, this.y - this.size,
                    this.x, this.y);
  ctx.fill();
};

Heart.prototype.update = function() {
  this.y -= this.speed;
  this.draw();
};

function animate() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  hearts.forEach((heart, index) => {
    heart.update();
    if (heart.y + heart.size < 0) {
      hearts.splice(index, 1);
    }
  });
  requestAnimationFrame(animate);
}

function spawnHeart() {
  let x = Math.random() * canvas.width;
  let y = canvas.height + 10;
  hearts.push(new Heart(x, y));
}

setInterval(spawnHeart, 300);
animate();
"""

# Escribir archivos
with open(f"{base_path}/index.html", "w", encoding="utf-8") as f:
    f.write(index_html)

with open(f"{base_path}/style.css", "w", encoding="utf-8") as f:
    f.write(style_css)

with open(f"{base_path}/hearts.js", "w", encoding="utf-8") as f:
    f.write(hearts_js)

# Crear archivo ZIP
zip_path = f"/mnt/data/{project_name}.zip"
with zipfile.ZipFile(zip_path, 'w') as zipf:
    for foldername, subfolders, filenames in os.walk(base_path):
        for filename in filenames:
            file_path = os.path.join(foldername, filename)
            arcname = os.path.relpath(file_path, base_path)
            zipf.write(file_path, arcname=arcname)

zip_path  # Ruta al archivo zip

